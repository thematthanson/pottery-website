name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Use Node.js version 18
          cache: npm

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Step 4: Build the project
      - name: Build Project
        run: npm run build
        env:
          VITE_GOOGLE_SHEETS_API_KEY: ${{ secrets.VITE_GOOGLE_SHEETS_API_KEY }}
          VITE_GOOGLE_SHEETS_ID: ${{ secrets.VITE_GOOGLE_SHEETS_ID }}
          VITE_EMAILJS_PUBLIC_KEY: ${{ secrets.VITE_EMAILJS_PUBLIC_KEY }}
          VITE_EMAILJS_SERVICE_ID: ${{ secrets.VITE_EMAILJS_SERVICE_ID }}
          VITE_EMAILJS_ADMIN_TEMPLATE_ID: ${{ secrets.VITE_EMAILJS_ADMIN_TEMPLATE_ID }}
          VITE_EMAILJS_CUSTOMER_TEMPLATE_ID: ${{ secrets.VITE_EMAILJS_CUSTOMER_TEMPLATE_ID }}

      # Step 5: Disable Jekyll
      - name: Disable Jekyll
        run: touch dist/.nojekyll

      # Step 6: Configure GitHub Pages
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3

      # Step 7: Upload build output
      - name: Upload Build Output
        uses: actions/upload-pages-artifact@v1 # Use v1 instead of v4
        with:
          path: dist

      # Step 8: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2