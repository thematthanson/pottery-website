(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function s(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}})();window.onload=function(){emailjs.init({publicKey:"vW49wpkhQr_SdPxoQ"}),console.log("EmailJS initialized")};let l=[];document.addEventListener("DOMContentLoaded",async()=>{try{l=await f("AIzaSyAUJpkOxa9WhkMJ08RUF0brMzz1b2VVJiM","11Z6kV9s-XKGsUcNxrrBm8oT9HMbUiaqnHoJbHdjxkUQ","Pots!H2:O"),console.log("Initial pottery data:",l),m(l)}catch(o){console.error("Error initializing data:",o)}});async function f(o,r,n){try{const s=`https://sheets.googleapis.com/v4/spreadsheets/${r}/values/${n}?key=${o}`,e=await fetch(s);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const t=await e.json();return console.log("Fetched data:",t),t.values||[]}catch(s){throw console.error("Error fetching data:",s),s}}function m(o){const r=document.getElementById("pottery-grid");if(!r){console.error("Pottery grid element not found");return}r.innerHTML="",o.forEach(([n,s,e,t,i,u,d])=>{const a=(d==null?void 0:d.toLowerCase())==="taken",c=document.createElement("div");c.className=`card ${a?"taken":""}`,c.innerHTML=`
            <figure>
                <img src="${s}" alt="Pottery ${n}" 
                     class="w-full h-48 object-cover ${a?"grayscale":""}"
                     onerror="this.src='../image/fallback-image.jpg'">
            </figure>
            <div class="p-4">
                <h2 class="text-xl font-semibold mb-2">Pottery ${n}</h2>
                <p class="text-gray-600 mb-2">${u||"No description available"}</p>
                <p class="text-gray-600 mb-4">Size: ${e||0} x ${t||0} x ${i||0}</p>
                <button class="btn btn-primary w-full" 
                        ${a?"disabled":""}
                        onclick="openModal('${n}')">
                    ${a?"Taken":"Select"}
                </button>
            </div>
        `,r.appendChild(c)})}function p(){const o=document.getElementById("pottery-modal");o&&o.close()}async function y(o){const r="https://script.google.com/macros/s/AKfycbxjKiW3A3TuVk9JGIk3EKmzWDTU-HQMILKOvzC5vSq0Fz5t3ZWjI6QMBndxcv9i02Mi/exec";try{console.log("Updating sheet for pottery:",o);const n=await fetch(r,{method:"POST",mode:"no-cors",headers:{"Content-Type":"application/json"},body:JSON.stringify({potteryId:o})});return{success:!0}}catch(n){throw console.error("Error updating Google Sheet:",n),n}}document.getElementById("order-form").addEventListener("submit",async function(o){o.preventDefault(),console.log("Starting form submission...");const r=new FormData(this),n={};for(let[e,t]of r.entries())n[e]=t;console.log("Form data being sent:",n);const s=this.querySelector('button[type="submit"]');s.disabled=!0,s.textContent="Submitting...";try{const e=r.get("pottery_id");if(!e)throw new Error("Pottery ID not found in form");await y(e),console.log("Sheet updated successfully"),console.log("Data being sent to admin email:");const t=new FormData(this);for(let[a,c]of t.entries())console.log(`${a}: ${c}`);const i=await emailjs.sendForm("service_upmdb3d","template_uz2a3sn",this,"vW49wpkhQr_SdPxoQ");console.log("Admin email sent successfully:",i),console.log("Data being sent to customer email:");const u=new FormData(this);for(let[a,c]of u.entries())console.log(`${a}: ${c}`);const d=await emailjs.sendForm("service_upmdb3d","template_nmghb6b",this,"vW49wpkhQr_SdPxoQ");console.log("Customer confirmation sent successfully:",d),await g(e),p(),alert("Order submitted successfully! Please check your email for confirmation.")}catch(e){console.error("Failed to process order:",e),console.error("Error details:",e),alert(`Failed to submit order: ${e.message}`)}finally{s.disabled=!1,s.textContent="Submit Order"}});async function g(o){console.log("Marking pottery as taken:",o);const r=l.findIndex(n=>n[0]===o);r!==-1?(l[r][6]="taken",m(l)):console.error("Pottery item not found")}
